#!/bin/bash

# This script must be run from its location in the Rosetta database.  The tools repository must also be
# present in the same directory as the main repository.

# This script pulls the current version of the IEDB database and processes it for use with Rosetta.
# Individual users can use this to update the database with their local copy of Rosetta.  These changes
# can also be committed to the master repository using the standard pull request process, but care should
# be taken to ensure that the database is correctly downloaded and processed.

# If you use this database, you will need to cite the IEDB:
# Users are requested to cite the IEDB when they present information obtained from the IEDB: http://www.iedb.org.
# The journal reference for the IEDB was updated in 2018 and should be cited as: Vita R, Mahajan S, Overton JA,
# Dhanda SK, Martini S, Cantrell JR, Wheeler DK, Sette A, Peters B. The Immune Epitope Database (IEDB): 2018 update.
# Nucleic Acids Res. 2019 Jan 8;47(D1):D339-D343. doi: 10.1093/nar/gky1006. PMID: 30357391
# All publications or presentations referring to data generated by use of the IEDB Resource Analysis tools should
# include citations to the relevant reference(s), found here: http://tools.iedb.org/main/references/

# For this script to work, you need to have mysql / mariadb up and running, with access to a database.
# Also need to have installed mysql.connector https://dev.mysql.com/downloads/connector/python/
# By default, we assume that the database is called 'iedb' and you have root access with no password.
# Arguments to the script will allow you to specify a database name, username, and password.
# Type refresh_iedb_database.sh -? for usage information.

#argparser for mysql settings
dbname=iedb #Default mysql database name, will get overridden by -d if provided
while getopts ":d:u:p:" opt; do
	case ${opt} in
		d ) dbname=$OPTARG
			;;
		u ) uname=$OPTARG
			;;
		p ) pword=$OPTARG
			;;
		\? ) echo "Usage: refresh_iedb_database.sh [-d mysql_database_name] [-u mysql_database_userid] [-p mysql_password]"
			echo "The default mysql_database_name is iedb.  By default, no username or password are provided."
			exit 1
			;;
		: ) echo "Invalid option: $OPTARG requires an argument, if provided."
			exit 1
			;;
	esac
done

#Make the "sql string"
#Ensures that we only pass the options with values to the python script
if [ $uname ]; then
	sqlstring="$sqlstring --mysql_user $uname"
fi
if [ $pword ]; then
	sqlstring="$sqlstring --mysql_pw $pword"
fi

echo "--------------------------------------------------------------------------------------------------------------------------------------------"
echo "This script is intended to refresh the supplied \"iedb_data.db\" database with the most recent IEDB data."
echo "The refreshed database is used automatically by \"iedb_data.mhc\", and can also be used by other MHCEpitopeEnergy configurations."
echo "To run, you need to have a mysql server and a writeable database ($dbname, can be changed using -d flag)."
echo "The mysql database will be accessed with username \"$uname\" and password \"$pword\" (changeable using -u and -p)."
echo "Note the the $dbname database will be PERMANENTLY ERASED and replaced with the up-to-date version from IEDB."
echo "It is also assumed that this script is being run from within the main repository, and that main and tools are cloned in the same directory."
echo "The file \"iedb_data.info\" will give the current status of \"iedb_data.db\".  DO NOT USE OR COMMIT the database without checking this first."
echo "If the refresh completes successfully, you can commit the updated database (iedb_data.db) and iedb_data.info to the Rosetta repository,"
echo "after ensuring that tests complete successfully."
echo
echo "DO NOT COMMIT iedb_data.db WITHOUT ALSO COMMITTING iedb_data.info, to ensure that users have up-to-date information about the database."
echo "--------------------------------------------------------------------------------------------------------------------------------------------"
echo "You are about to download the IEDB database under the IEDB terms of use.  You must cite the IEDB if you use this data."
echo "Citing the IEDB:"
echo "Users are requested to cite the IEDB when they present information obtained from the IEDB: http://www.iedb.org. The journal reference"
echo "for the IEDB should be cited as: Vita R, Mahajan S, Overton JA, Dhanda SK, Martini S, Cantrell JR, Wheeler DK, Sette A, Peters B. The"
echo "Immune Epitope Database (IEDB): 2018 update. Nucleic Acids Res. 2019 Jan 8;47(D1):D339-D343. doi: 10.1093/nar/gky1006. PMID: 30357391."
echo "--------------------------------------------------------------------------------------------------------------------------------------------"
read -n 1 -s -r -p "Press any key to continue, or Ctrl+C to cancel...."

# Download a fresh snapshot of IEDB and load it into a local database
# Grab the time when database download is started
dldate=`date`

echo "Downloading the IEDB database and storing as a local mysql database."
../../../../../tools/mhc_energy_tools/mhc_data_db.py --iedb_fresh_mysql $dbname $sqlstring

if [ "$?" -ne "0" ]; then
	echo "There was an error in downloading the IEDB database and saving it as a local mysql database."
	echo "Make sure that you have provided valid credentials for your local mysql server, and that you have enough"
	echo "disk space to store the entire database (several GB)."
	exit 2
fi
echo "Completed download of the IEDB database."

cat > iedb_data.info << EOF
DO NOT COMMIT THIS FILE AND iedb_data.db.  There may be a problem with iedb_data.db.

The refresh_iedb_database.sh script is in the process of updating iedb_data.db.
This text indicates that either the script is still running, or failed unsuccessfully.
Unless this text is updated indicating that the script completed successfully, you
SHOULD NOT COMMIT iedb_data.db.  You also should not use the database, unless you carefully
inspect it to ensure that it is valid.
EOF


# Pull the relevant information out of the downloaded IEDB database, and store in the iedb_data.db file
# We are overwriting the old database, so we will have an up-to-date copy
echo "Extracting relevant information from the local mysql copy of the IEDB and writing as iedb_data.db."
mysql_settings="--iedb_mysql $dbname $sqlstring "
tool_settings="--allele_set hlaII --assay_mhc_ligand_binding all --assay_mhc_ligand_elution all --cores all --db iedb_data.db --overwrite"
../../../../../tools/mhc_energy_tools/mhc_data_db.py $mysql_settings $tool_settings

if [ "$?" -ne "0" ]; then
	echo "There was an error in accessing the required data from your local copy of the IEDB."
	echo "Make sure that you have provided valid credentials for your local mysql server."
	exit 3
fi
echo "Completed writing the MHCEpitopeEnergy database."

# If we get this far, everything should have worked.  Let's do a quick test to make sure.
# Get the output of mhc_score.py using the new database and a peptide with 3.0 IEDB epitopes
peptide=ASLPTHAAHVVAVLDIKEEHLLEPAEA
expected_score=3.0
score_result=`../../../../../tools/mhc_energy_tools/mhc_score.py --db iedb_data.db --db_unseen_score 0 --db_unseen score $peptide`
# Get rid of output other than the score
score_result=`echo $score_result|awk '{print $NF}'`

# If the result is not the expected value of 3.0, output an error.
if [ $score_result != $expected_score ]; then
	echo "A test peptide ASLPTHAAHVVAVLDIKEEHLLEPAEA got a score of $score_result, when a score of $expected_score was expected."
	echo "This may mean that the iedb_data.db is malformed, and should be checked carefully before using."
	echo "It is also possible that changes in the underlying data cause this change, especially if the score obtained ($score_result) is greater than the expected score ($expected_score)."
	exit 4
fi

# Update the iedb_data.info file with relevant information.
gituser=`git config user.name`
gitemail=`git config user.email`

# Check if we have valid git information
if [[ $gituser == "" ]]; then
	echo "WARNING: No git username could be determined."
	echo "WARNING: No git username could be determined." >> iedb_data.info
	echo "Your database is probably OK, but you shouldn't commit it." >> iedb_data.info
	exit 5
fi
if [[ $gitemail == "" ]]; then
	echo "WARNING: No git email could be determined."
	echo "WARNING: No git email could be determined." >> iedb_data.info
	echo "Your database is probably OK, but you shouldn't commit it." >> iedb_data.info
	exit 6
fi

main_git_commit=`git rev-parse HEAD`
tools_git_commit=`(cd ../../../../../tools/; git rev-parse HEAD)`

cat > iedb_data.info << EOF
Git user $gituser ($gitemail) downloaded a fresh copy of the IEDB on $dldate.
The database was then used to generate iedb_data.db using the following command:
mhc_data_db.py --iedb_mysql <LOCAL_MYSQL_DATABASE_NAME> --mysql_user <LOCAL_MYSQL_USERNAME> --mysql_pw <LOCAL_MYSQL_PASSWORD> $tool_settings
(Values in <> are suppressed to protect the user's local mysql credentials.)

A rudimentary check has been made to ensure that a valid database file has been generated.
It should be safe to commit the updated database (ALONG WITH THIS FILE) to the Rosetta GitHub
repository.  Before doing so, make sure that unit test core:MHCEpitopeEnergySetupTests_initialization:test_iedb_database_integrity passes.

Any unit test failures should be carefully checked to make sure that they are caused by
changes in the database, and not a corrupt database.  Such occurrences should be very rare,
but not impossible.

Version of Rosetta main repository during update: $main_git_commit
Version of Rosetta tools repository during update: $tools_git_commit
EOF
